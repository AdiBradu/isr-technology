{"version":3,"file":"static/js/675.75741681.chunk.js","mappings":"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","sources":["components/Input/Input.component.jsx","components/Textarea/Textarea.component.jsx","components/Button/Button.component.jsx","components/Form/Form.component.jsx","components/Contact/Contact.component.jsx"],"sourcesContent":["import React from 'react';\nimport './Input.component.scss';\n\nexport default function Input({\n  label,\n  name,\n  type,\n  value,\n  placeholder,\n  onChange,\n  error,\n}) {\n  return (\n    <div className=\"input\">\n      <label>\n        <p className=\"caption\">{label}</p>\n      </label>\n      <input\n        type={type}\n        placeholder={placeholder}\n        onChange={onChange}\n        value={value}\n        name={name}\n      />\n      <p className=\"small error\">{error}</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport './Textarea.component.scss';\n\nexport default function Textarea({\n  label,\n  name,\n  type,\n  value,\n  placeholder,\n  onChange,\n  error,\n}) {\n  return (\n    <div className=\"textarea\">\n      <label>\n        <p className=\"caption\">{label}</p>\n      </label>\n      <textarea\n        placeholder={placeholder}\n        onChange={onChange}\n        name={name}\n        value={value}\n      ></textarea>\n      <p className=\"small error\">{error}</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport './Button.component.scss';\n\nexport default function Button({ type, text, status, bgColor, color, width }) {\n  return (\n    <button\n      className=\"form-send-button\"\n      type={type}\n      style={{ backgroundColor: bgColor, color: color, width: width }}\n    >\n      <p className=\"btn\">{text ? text : status}</p>\n    </button>\n  );\n}\n","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport axios from 'axios';\nimport './Form.component.scss';\nimport variables from '../../styles/_variables.module.scss';\nimport Sectionh2 from '../SectionH2/Sectionh2.component.jsx';\nimport Input from '../Input/Input.component.jsx';\nimport Textarea from '../Textarea/Textarea.component.jsx';\nimport Button from '../Button/Button.component.jsx';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { AppContext } from '../../AppContext';\n\nexport default function Form() {\n  const initialValues = { name: '', email: '', message: '' };\n  const [formValues, setFormValues] = useState(initialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n  const [status, setStatus] = useState('SEND INQUIRY');\n  const { themeColorObj } = useContext(AppContext);\n  const themeColor = themeColorObj[0];\n\n  const recaptchaRef = useRef();\n\n  const mailformat =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues({ ...formValues, [name]: value });\n  };\n\n  const validate = (values) => {\n    const errors = {};\n    if (!values.name) {\n      errors.name = 'Your name is required!';\n    }\n    if (!values.email) {\n      errors.email = 'Your email is required!';\n    } else if (!mailformat.test(values.email)) {\n      errors.email = 'Your email is not valid!';\n    }\n    if (!values.message) {\n      errors.message = 'A message is required!';\n    }\n    return errors;\n  };\n\n  const resetValues = () => {\n    setTimeout(function () {\n      setStatus('SEND INQUIRY');\n      setIsSubmit(false);\n      setIsValid(false);\n      setFormValues(initialValues);\n    }, 3000);\n  };\n\n  const sendForm = async () => {\n    try {\n      const token = await recaptchaRef.current.executeAsync();\n      const { name, email, message } = formValues;\n      await axios.post('/contact', {\n        name,\n        email,\n        message,\n        token,\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setIsSubmit(true);\n    setFormErrors(validate(formValues));\n  };\n\n  useEffect(() => {\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\n      setIsValid(true);\n    } else if (Object.keys(formErrors).length !== 0 && isSubmit) {\n      setStatus('TRY AGAIN!');\n    }\n  }, [formErrors, isSubmit]);\n\n  useEffect(() => {\n    if (isValid) {\n      setStatus('THANK YOU!');\n      sendForm();\n      resetValues();\n    }\n  }, [isValid]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Sectionh2 h2={'Send your inquiry'} />\n      <Input\n        label={'name'}\n        type={'text'}\n        placeholder={'Your name'}\n        onChange={handleChange}\n        name={'name'}\n        value={formValues.name}\n        error={formErrors.name}\n      />\n      <Input\n        label={'email'}\n        type={'email'}\n        placeholder={'Your email address'}\n        onChange={handleChange}\n        name={'email'}\n        value={formValues.email}\n        error={formErrors.email}\n      />\n      <Textarea\n        label={'message'}\n        placeholder={'Please type your message'}\n        onChange={handleChange}\n        name={'message'}\n        value={formValues.message}\n        error={formErrors.message}\n      />\n      <div>\n        <p className=\"small\">\n          This site is protected by reCAPTCHA and the Google\n          <a\n            href=\"https://policies.google.com/privacy\"\n            style={{ color: `${variables.secondaryColorDark}` }}\n          >\n            {' '}\n            Privacy Policy\n          </a>{' '}\n          and\n          <a\n            href=\"https://policies.google.com/terms\"\n            style={{ color: `${variables.secondaryColorDark}` }}\n          >\n            {' '}\n            Terms of Service\n          </a>{' '}\n          apply.\n        </p>\n      </div>\n      <Button\n        type={'submit'}\n        status={status}\n        bgColor={variables.secondaryColor}\n        colors={variables.primaryColor}\n        width={'100%'}\n      />\n      <ReCAPTCHA\n        ref={recaptchaRef}\n        sitekey={'6LeMJE4eAAAAAMTccweQVhjvYKhRjfAO9wrVFsQI'}\n        theme={themeColor === 'light' ? 'light' : 'dark'}\n        size=\"invisible\"\n      />\n    </form>\n  );\n}\n","import React, { useContext } from 'react';\nimport './Contact.component.scss';\nimport Container from '../../components/Container/Container.component.jsx';\nimport { AppContext } from '../../AppContext';\nimport Sectionh1 from '../SectionH1/Sectionh1.component';\nimport MarkdownParagraph from '../../components/MarkdownParagraph/MarkdownParagraph.component.jsx';\nimport Form from '../Form/Form.component.jsx';\nimport Icon from '../Icon/Icon.component.jsx';\nimport Footer from '../../components/Footer/Footer.component.jsx';\nimport SShape from '../../assets/icons/sShape.svg';\n\nexport default function Contact() {\n  const { isMD } = useContext(AppContext);\n\n  return (\n    <section className=\"contact\" id=\"contact\">\n      <Container\n        display={`grid`}\n        maxWidth={`1200px`}\n        columns={ isMD ? `repeat(4, 1fr)` :  `repeat(1, 1fr)`}\n        rows={`repeat(3, auto)`}\n        classe={`lp-container`}\n      >\n        <div className=\"section-intro\">\n          <Sectionh1 h1={`contact, navigation & social media`} />\n          <MarkdownParagraph fileName={'contact.md'} />\n        </div>\n        <Form />\n        <Footer/>\n      </Container>\n      <Icon icon={SShape} class={'s-shape-down'} />\n    </section>\n  );\n}\n"],"names":["Input","label","name","type","value","placeholder","onChange","error","className","Textarea","Button","text","status","bgColor","color","width","style","backgroundColor","Form","initialValues","email","message","useState","formValues","setFormValues","formErrors","setFormErrors","isSubmit","setIsSubmit","isValid","setIsValid","setStatus","themeColor","useContext","AppContext","themeColorObj","recaptchaRef","useRef","mailformat","handleChange","e","target","sendForm","current","executeAsync","token","axios","console","useEffect","Object","keys","length","setTimeout","onSubmit","event","preventDefault","values","errors","test","validate","h2","href","variables","colors","ref","sitekey","theme","size","Contact","isMD","id","display","maxWidth","columns","rows","classe","h1","fileName","icon","SShape","class"],"sourceRoot":""}