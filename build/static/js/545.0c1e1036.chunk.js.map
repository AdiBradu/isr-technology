{"version":3,"file":"static/js/545.0c1e1036.chunk.js","mappings":"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","sources":["components/Icon/Icon.component.jsx","components/Value/Value.component.jsx","components/Values/Values.component.jsx"],"sourcesContent":["import React from 'react';\nimport './Icon.component.scss';\n\nexport default function Icon(props) {\n  return (\n    <div className={`icon ${props.class}`}>\n      <img src={props.icon} alt=\"icon\" />\n    </div>\n  );\n}\n","import React, { useEffect, useContext } from 'react';\nimport './Value.component.scss';\nimport Icon from '../Icon/Icon.component.jsx';\nimport { motion, useAnimation } from 'framer-motion';\nimport { AppContext } from '../../AppContext';\n\nexport default function Value({ x, y, id, icon, text }) {\n  const { isMD, isPortrait, isLandscape } = useContext(AppContext);\n\n  console.log(process.env.REACT_APP_PUBLIC_URL + icon);\n  const xCoord = x;\n  const yCoord = y;\n  const zCoord = 360 + x;\n  const wCoord = -360 + y;\n\n  const animateValueSquare = useAnimation();\n  const animateValueItem = useAnimation();\n\n  const inititalWidth =\n    isMD && isLandscape ? '70vh' : isMD && isPortrait ? '70vw' : '100vw';\n  const expandedWidth =\n    isMD && isLandscape ? '120vh' : isMD && isPortrait ? '120vw' : '150vw';\n\n  useEffect(() => {\n    animateValueSquare.start({\n      rotate: `${zCoord}deg`,\n      width: [null, expandedWidth, inititalWidth],\n      transition: {\n        ease: 'easeInOut',\n        duration: 20,\n        repeat: Infinity,\n      },\n    });\n    animateValueItem.start({\n      rotate: `${wCoord}deg`,\n      transition: {\n        duration: 20,\n        repeat: Infinity,\n      },\n    });\n  }, [\n    animateValueSquare,\n    animateValueItem,\n    zCoord,\n    yCoord,\n    wCoord,\n    inititalWidth,\n    expandedWidth,\n  ]);\n\n  return (\n    <motion.div\n      className=\"value\"\n      layout\n      initial={{\n        x: '-50%',\n        y: '-50%',\n        rotate: `${xCoord}deg`,\n        width: [inititalWidth, inititalWidth, inititalWidth],\n      }}\n      animate={animateValueSquare}\n    >\n      <motion.div\n        layout\n        className=\"value-group\"\n        initial={{ rotate: `${yCoord}deg` }}\n        id={id}\n        animate={animateValueItem}\n      >\n        <Icon\n          icon={process.env.REACT_APP_PUBLIC_URL + `${icon}`}\n          class={'value-icon'}\n        />\n        <p className=\"small\">{text}</p>\n      </motion.div>\n    </motion.div>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport variables from '../../styles/_variables.module.scss';\nimport './Values.component.scss';\nimport Value from '../Value/Value.component.jsx';\nimport { AppContext } from '../../AppContext';\nimport { motion, useAnimation } from 'framer-motion';\n\nexport default function Values() {\n  const { isMD, isXXL, valuesData, themeColorObj } = useContext(AppContext);\n  const themeColor = themeColorObj[0];\n  const animateLetter = useAnimation();\n  const letters = [' f', 'u', 't', 'u', 'r', 'e'];\n\n  useEffect(() => {\n    animateLetter.start({\n      opacity: 1,\n    });\n  }, [animateLetter]);\n\n  return (\n    <section className=\"values full-vh\" id=\"values\">\n      {valuesData.map((value) => (\n        <Value\n          key={value.id}\n          icon={themeColor === 'light' ? value.icon.light : value.icon.dark}\n          text={value.title}\n          x={value.coordonates.x}\n          y={value.coordonates.y}\n          animation={value.animation}\n          id={value.title}\n          second={value.rotate.second}\n          third={value.rotate.third}\n        />\n      ))}\n      <motion.div\n        className=\"logo-value\"\n        animate={{\n          scale: [null, 1.2, 1],\n          transition: { duration: 10, repeat: Infinity },\n        }}\n      ></motion.div>\n      <motion.h1\n        className={\n          'ready ' + (isXXL ? 'display1' : isMD ? 'display2' : 'display3')\n        }\n        style={\n          themeColor === 'light'\n            ? { color: variables.primaryColor }\n            : { color: variables.secondaryColor }\n        }\n      >\n        ready for <br /> the\n        {letters.map((letter, i) => (\n          <motion.span\n            key={i}\n            animate={animateLetter}\n            initial={{ opacity: 0 }}\n            transition={{ delay: i * 0.15 }}\n          >\n            {letter}\n          </motion.span>\n        ))}\n      </motion.h1>\n    </section>\n  );\n}\n"],"names":["Icon","props","className","class","src","icon","alt","Value","x","y","id","text","useContext","AppContext","isMD","isPortrait","isLandscape","console","log","process","xCoord","yCoord","zCoord","wCoord","animateValueSquare","useAnimation","animateValueItem","inititalWidth","expandedWidth","useEffect","start","rotate","width","transition","ease","duration","repeat","Infinity","motion","layout","initial","animate","Values","isXXL","valuesData","themeColor","themeColorObj","animateLetter","opacity","map","value","light","dark","title","coordonates","animation","second","third","scale","style","color","variables","letter","i","delay"],"sourceRoot":""}